yolov2_tiny_bnn
encoder
  ConvLTC:Conv2d(in_channels = 3, out_channels = 3, kernel_size = 3, padding = 1, stride = 1)
	 BatchNorm2d(out_channels = 3)
feature
  newFeature:
    SNN_2d_lsnn:Conv_2d(in_channels = 3, out_channels = 48, kernel_size = 5, padding = 2, stride = 2, dilation = 1)
	           BatchNorm(48)
	           LeakyReLU
    SNN_2d:Conv_2d(in_channels = 48, out_channels = 96, kernel_size = 3, padding = 1, stride = 2, dilation = 1)
	  BatchNorm(48)
	  LeakyReLU
new_model_2d 238



--------------------------------------------------backbone----------------------------------------------------------------------
pred
  head_det_1:Conv2d(in_channels = 768, out_channels = 21, kernel_size = 1, padding = 0, stride = 1)
  head_det_2:Conv2d(in_channels = 384, out_channels = 21, kernel_size = 1, padding = 0, stride = 1)
  head_det_3:Conv2d(in_channels = 192, out_channels = 21, kernel_size = 1, padding = 0, stride = 1)
  SNN_2d_lsnn_front:
	Conv2d(in_channels = 1, out_channels = 1, kernel_size = 3, padding = 1, stride = 1, dilation = 1)
	BatchNorm2d(out_channels = 1)
	LeakyReLU





YOLOv2Tiny_BNN(
  (encoder): ConvLTC(
    (conv): Sequential(
      (0): Conv2d(3, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (sigmoid): Sigmoid()
    (tanh): Tanh()
  )
  (feature): newFeature(
    (cells): ModuleList(
      (0): Cell(
        (_ops): ModuleList(
          (0): SNN_2d(
            (conv1): Conv2d(48, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (1): SNN_2d(
            (conv1): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (2): SNN_2d(
            (conv1): Conv2d(48, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (3): SNN_2d(
            (conv1): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (4-5): 2 x SNN_2d(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
        )
      )
      (1): Cell(
        (_ops): ModuleList(
          (0-3): 4 x SNN_2d(
            (conv1): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (4-5): 2 x SNN_2d(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
        )
      )
      (2): Cell(
        (_ops): ModuleList(
          (0-3): 4 x SNN_2d(
            (conv1): Conv2d(96, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (4-5): 2 x SNN_2d(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
        )
      )
      (3): Cell(
        (_ops): ModuleList(
          (0): SNN_2d(
            (conv1): Conv2d(96, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (1): SNN_2d(
            (conv1): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (2): SNN_2d(
            (conv1): Conv2d(96, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (3): SNN_2d(
            (conv1): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (4-5): 2 x SNN_2d(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
        )
      )
      (4): Cell(
        (_ops): ModuleList(
          (0-3): 4 x SNN_2d(
            (conv1): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (4-5): 2 x SNN_2d(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
        )
      )
      (5): Cell(
        (_ops): ModuleList(
          (0-3): 4 x SNN_2d(
            (conv1): Conv2d(192, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (4-5): 2 x SNN_2d(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
        )
      )
      (6): Cell(
        (_ops): ModuleList(
          (0): SNN_2d(
            (conv1): Conv2d(192, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (1): SNN_2d(
            (conv1): Conv2d(384, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (2): SNN_2d(
            (conv1): Conv2d(192, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (3): SNN_2d(
            (conv1): Conv2d(384, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (4-5): 2 x SNN_2d(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
        )
      )
      (7): Cell(
        (_ops): ModuleList(
          (0-3): 4 x SNN_2d(
            (conv1): Conv2d(384, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (4-5): 2 x SNN_2d(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
        )
      )
      (8): Cell(
        (_ops): ModuleList(
          (0-3): 4 x SNN_2d(
            (conv1): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (4-5): 2 x SNN_2d(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
        )
      )
      (9): Cell(
        (_ops): ModuleList(
          (0): SNN_2d(
            (conv1): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (1): SNN_2d(
            (conv1): Conv2d(768, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (2): SNN_2d(
            (conv1): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (3): SNN_2d(
            (conv1): Conv2d(768, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
          (4-5): 2 x SNN_2d(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): LeakyReLU(negative_slope=0.01)
          )
        )
      )
    )
    (stem0): SNN_2d_lsnn(
      (conv1): Conv2d(3, 48, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
      (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (stem1): SNN_2d(
      (conv1): Conv2d(48, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (connect_1): SNN_2d(
      (conv1): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1))
      (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (connect_2): SNN_2d(
      (conv1): Conv2d(576, 192, kernel_size=(1, 1), stride=(1, 1))
      (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (connect_3): SNN_2d(
      (conv1): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1))
      (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (up_conv1): SNN_2d(
      (conv1): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1))
      (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (up_conv2): SNN_2d(
      (conv1): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1))
      (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (smooth1): SNN_2d(
      (conv1): Conv2d(384, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (smooth2): SNN_2d(
      (conv1): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (smooth3): SNN_2d(
      (conv1): Conv2d(96, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.01)
    )
  )
  (head_det_1): Conv2d(768, 21, kernel_size=(1, 1), stride=(1, 1))
  (head_det_2): Conv2d(384, 21, kernel_size=(1, 1), stride=(1, 1))
  (head_det_3): Conv2d(192, 21, kernel_size=(1, 1), stride=(1, 1))
  (lsnn): SNN_2d_lsnn_front(
    (conv1): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): LeakyReLU(negative_slope=0.01)
  )
)